// Code generated by protoc-gen-go.
// source: raft_cmdpb.proto
// DO NOT EDIT!

/*
Package raft_cmdpb is a generated protocol buffer package.

It is generated from these files:
	raft_cmdpb.proto

It has these top-level messages:
	GetRequest
	GetResponse
	SeekRequest
	SeekResponse
	PutRequest
	PutResponse
	DeleteRequest
	DeleteResponse
	SnapRequest
	SnapResponse
	Request
	Response
	ChangePeerRequest
	ChangePeerResponse
	SplitRequest
	SplitResponse
	CompactLogRequest
	CompactLogResponse
	AdminRequest
	AdminResponse
	RegionLeaderRequest
	RegionLeaderResponse
	RegionDetailRequest
	RegionDetailResponse
	StoreStatsRequest
	StoreStatsResponse
	StatusRequest
	StatusResponse
	RaftRequestHeader
	RaftResponseHeader
	RaftCmdRequest
	RaftCmdResponse
*/
package raft_cmdpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metapb "github.com/pingcap/kvproto/pkg/metapb"
import errorpb "github.com/pingcap/kvproto/pkg/errorpb"
import raftpb "github.com/pingcap/kvproto/pkg/raftpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CmdType int32

const (
	CmdType_Invalid CmdType = 0
	CmdType_Get     CmdType = 1
	CmdType_Seek    CmdType = 2
	CmdType_Put     CmdType = 3
	CmdType_Delete  CmdType = 4
	CmdType_Snap    CmdType = 5
)

var CmdType_name = map[int32]string{
	0: "Invalid",
	1: "Get",
	2: "Seek",
	3: "Put",
	4: "Delete",
	5: "Snap",
}
var CmdType_value = map[string]int32{
	"Invalid": 0,
	"Get":     1,
	"Seek":    2,
	"Put":     3,
	"Delete":  4,
	"Snap":    5,
}

func (x CmdType) Enum() *CmdType {
	p := new(CmdType)
	*p = x
	return p
}
func (x CmdType) String() string {
	return proto.EnumName(CmdType_name, int32(x))
}
func (x *CmdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CmdType_value, data, "CmdType")
	if err != nil {
		return err
	}
	*x = CmdType(value)
	return nil
}
func (CmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AdminCmdType int32

const (
	AdminCmdType_InvalidAdmin AdminCmdType = 0
	AdminCmdType_ChangePeer   AdminCmdType = 1
	AdminCmdType_Split        AdminCmdType = 2
	AdminCmdType_CompactLog   AdminCmdType = 3
)

var AdminCmdType_name = map[int32]string{
	0: "InvalidAdmin",
	1: "ChangePeer",
	2: "Split",
	3: "CompactLog",
}
var AdminCmdType_value = map[string]int32{
	"InvalidAdmin": 0,
	"ChangePeer":   1,
	"Split":        2,
	"CompactLog":   3,
}

func (x AdminCmdType) Enum() *AdminCmdType {
	p := new(AdminCmdType)
	*p = x
	return p
}
func (x AdminCmdType) String() string {
	return proto.EnumName(AdminCmdType_name, int32(x))
}
func (x *AdminCmdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdminCmdType_value, data, "AdminCmdType")
	if err != nil {
		return err
	}
	*x = AdminCmdType(value)
	return nil
}
func (AdminCmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type StatusCmdType int32

const (
	StatusCmdType_InvalidStatus StatusCmdType = 0
	StatusCmdType_RegionLeader  StatusCmdType = 1
	StatusCmdType_RegionDetail  StatusCmdType = 2
	StatusCmdType_StoreStats    StatusCmdType = 3
)

var StatusCmdType_name = map[int32]string{
	0: "InvalidStatus",
	1: "RegionLeader",
	2: "RegionDetail",
	3: "StoreStats",
}
var StatusCmdType_value = map[string]int32{
	"InvalidStatus": 0,
	"RegionLeader":  1,
	"RegionDetail":  2,
	"StoreStats":    3,
}

func (x StatusCmdType) Enum() *StatusCmdType {
	p := new(StatusCmdType)
	*p = x
	return p
}
func (x StatusCmdType) String() string {
	return proto.EnumName(StatusCmdType_name, int32(x))
}
func (x *StatusCmdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusCmdType_value, data, "StatusCmdType")
	if err != nil {
		return err
	}
	*x = StatusCmdType(value)
	return nil
}
func (StatusCmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Value            []byte `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SeekRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SeekRequest) Reset()                    { *m = SeekRequest{} }
func (m *SeekRequest) String() string            { return proto.CompactTextString(m) }
func (*SeekRequest) ProtoMessage()               {}
func (*SeekRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SeekRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SeekResponse struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SeekResponse) Reset()                    { *m = SeekResponse{} }
func (m *SeekResponse) String() string            { return proto.CompactTextString(m) }
func (*SeekResponse) ProtoMessage()               {}
func (*SeekResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SeekResponse) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SeekResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PutRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type SnapRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SnapRequest) Reset()                    { *m = SnapRequest{} }
func (m *SnapRequest) String() string            { return proto.CompactTextString(m) }
func (*SnapRequest) ProtoMessage()               {}
func (*SnapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SnapResponse struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SnapResponse) Reset()                    { *m = SnapResponse{} }
func (m *SnapResponse) String() string            { return proto.CompactTextString(m) }
func (*SnapResponse) ProtoMessage()               {}
func (*SnapResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SnapResponse) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type Request struct {
	CmdType          *CmdType       `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.CmdType" json:"cmd_type,omitempty"`
	Get              *GetRequest    `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	Seek             *SeekRequest   `protobuf:"bytes,3,opt,name=seek" json:"seek,omitempty"`
	Put              *PutRequest    `protobuf:"bytes,4,opt,name=put" json:"put,omitempty"`
	Delete           *DeleteRequest `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	Snap             *SnapRequest   `protobuf:"bytes,6,opt,name=snap" json:"snap,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Request) GetCmdType() CmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CmdType_Invalid
}

func (m *Request) GetGet() *GetRequest {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Request) GetSeek() *SeekRequest {
	if m != nil {
		return m.Seek
	}
	return nil
}

func (m *Request) GetPut() *PutRequest {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Request) GetDelete() *DeleteRequest {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Request) GetSnap() *SnapRequest {
	if m != nil {
		return m.Snap
	}
	return nil
}

type Response struct {
	CmdType          *CmdType        `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.CmdType" json:"cmd_type,omitempty"`
	Get              *GetResponse    `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	Seek             *SeekResponse   `protobuf:"bytes,3,opt,name=seek" json:"seek,omitempty"`
	Put              *PutResponse    `protobuf:"bytes,4,opt,name=put" json:"put,omitempty"`
	Delete           *DeleteResponse `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	Snap             *SnapResponse   `protobuf:"bytes,6,opt,name=snap" json:"snap,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Response) GetCmdType() CmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CmdType_Invalid
}

func (m *Response) GetGet() *GetResponse {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Response) GetSeek() *SeekResponse {
	if m != nil {
		return m.Seek
	}
	return nil
}

func (m *Response) GetPut() *PutResponse {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Response) GetDelete() *DeleteResponse {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Response) GetSnap() *SnapResponse {
	if m != nil {
		return m.Snap
	}
	return nil
}

type ChangePeerRequest struct {
	ChangeType       *raftpb.ConfChangeType `protobuf:"varint,1,opt,name=change_type,json=changeType,enum=raftpb.ConfChangeType" json:"change_type,omitempty"`
	StoreId          *uint64                `protobuf:"varint,2,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChangePeerRequest) Reset()                    { *m = ChangePeerRequest{} }
func (m *ChangePeerRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePeerRequest) ProtoMessage()               {}
func (*ChangePeerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ChangePeerRequest) GetChangeType() raftpb.ConfChangeType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return raftpb.ConfChangeType_AddNode
}

func (m *ChangePeerRequest) GetStoreId() uint64 {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return 0
}

type ChangePeerResponse struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ChangePeerResponse) Reset()                    { *m = ChangePeerResponse{} }
func (m *ChangePeerResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePeerResponse) ProtoMessage()               {}
func (*ChangePeerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ChangePeerResponse) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type SplitRequest struct {
	// The split_key must be in the been splitting region.
	// If the split_key is none, we will choose a proper key
	// to split the region in half.
	SplitKey []byte `protobuf:"bytes,1,opt,name=split_key,json=splitKey" json:"split_key,omitempty"`
	// We split the region into two, first uses the origin
	// parent region id, and the second uses the new_region_id.
	// We must guarantee that the new_region_id is global unique.
	NewRegionId      *uint64 `protobuf:"varint,2,opt,name=new_region_id,json=newRegionId" json:"new_region_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SplitRequest) Reset()                    { *m = SplitRequest{} }
func (m *SplitRequest) String() string            { return proto.CompactTextString(m) }
func (*SplitRequest) ProtoMessage()               {}
func (*SplitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SplitRequest) GetSplitKey() []byte {
	if m != nil {
		return m.SplitKey
	}
	return nil
}

func (m *SplitRequest) GetNewRegionId() uint64 {
	if m != nil && m.NewRegionId != nil {
		return *m.NewRegionId
	}
	return 0
}

type SplitResponse struct {
	Left             *metapb.Region `protobuf:"bytes,1,opt,name=left" json:"left,omitempty"`
	Right            *metapb.Region `protobuf:"bytes,2,opt,name=right" json:"right,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SplitResponse) Reset()                    { *m = SplitResponse{} }
func (m *SplitResponse) String() string            { return proto.CompactTextString(m) }
func (*SplitResponse) ProtoMessage()               {}
func (*SplitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SplitResponse) GetLeft() *metapb.Region {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *SplitResponse) GetRight() *metapb.Region {
	if m != nil {
		return m.Right
	}
	return nil
}

type CompactLogRequest struct {
	CompactIndex     *uint64 `protobuf:"varint,1,opt,name=compact_index,json=compactIndex" json:"compact_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CompactLogRequest) Reset()                    { *m = CompactLogRequest{} }
func (m *CompactLogRequest) String() string            { return proto.CompactTextString(m) }
func (*CompactLogRequest) ProtoMessage()               {}
func (*CompactLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CompactLogRequest) GetCompactIndex() uint64 {
	if m != nil && m.CompactIndex != nil {
		return *m.CompactIndex
	}
	return 0
}

type CompactLogResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CompactLogResponse) Reset()                    { *m = CompactLogResponse{} }
func (m *CompactLogResponse) String() string            { return proto.CompactTextString(m) }
func (*CompactLogResponse) ProtoMessage()               {}
func (*CompactLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type AdminRequest struct {
	CmdType          *AdminCmdType      `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.AdminCmdType" json:"cmd_type,omitempty"`
	ChangePeer       *ChangePeerRequest `protobuf:"bytes,2,opt,name=change_peer,json=changePeer" json:"change_peer,omitempty"`
	Split            *SplitRequest      `protobuf:"bytes,3,opt,name=split" json:"split,omitempty"`
	CompactLog       *CompactLogRequest `protobuf:"bytes,4,opt,name=compact_log,json=compactLog" json:"compact_log,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AdminRequest) Reset()                    { *m = AdminRequest{} }
func (m *AdminRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminRequest) ProtoMessage()               {}
func (*AdminRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AdminRequest) GetCmdType() AdminCmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return AdminCmdType_InvalidAdmin
}

func (m *AdminRequest) GetChangePeer() *ChangePeerRequest {
	if m != nil {
		return m.ChangePeer
	}
	return nil
}

func (m *AdminRequest) GetSplit() *SplitRequest {
	if m != nil {
		return m.Split
	}
	return nil
}

func (m *AdminRequest) GetCompactLog() *CompactLogRequest {
	if m != nil {
		return m.CompactLog
	}
	return nil
}

type AdminResponse struct {
	CmdType          *AdminCmdType       `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.AdminCmdType" json:"cmd_type,omitempty"`
	ChangePeer       *ChangePeerResponse `protobuf:"bytes,2,opt,name=change_peer,json=changePeer" json:"change_peer,omitempty"`
	Split            *SplitResponse      `protobuf:"bytes,3,opt,name=split" json:"split,omitempty"`
	CompactLog       *CompactLogResponse `protobuf:"bytes,4,opt,name=compact_log,json=compactLog" json:"compact_log,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AdminResponse) Reset()                    { *m = AdminResponse{} }
func (m *AdminResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminResponse) ProtoMessage()               {}
func (*AdminResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *AdminResponse) GetCmdType() AdminCmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return AdminCmdType_InvalidAdmin
}

func (m *AdminResponse) GetChangePeer() *ChangePeerResponse {
	if m != nil {
		return m.ChangePeer
	}
	return nil
}

func (m *AdminResponse) GetSplit() *SplitResponse {
	if m != nil {
		return m.Split
	}
	return nil
}

func (m *AdminResponse) GetCompactLog() *CompactLogResponse {
	if m != nil {
		return m.CompactLog
	}
	return nil
}

// For get the leader of the region.
type RegionLeaderRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegionLeaderRequest) Reset()                    { *m = RegionLeaderRequest{} }
func (m *RegionLeaderRequest) String() string            { return proto.CompactTextString(m) }
func (*RegionLeaderRequest) ProtoMessage()               {}
func (*RegionLeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type RegionLeaderResponse struct {
	LeaderStoreId    *uint64 `protobuf:"varint,1,opt,name=leader_store_id,json=leaderStoreId" json:"leader_store_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegionLeaderResponse) Reset()                    { *m = RegionLeaderResponse{} }
func (m *RegionLeaderResponse) String() string            { return proto.CompactTextString(m) }
func (*RegionLeaderResponse) ProtoMessage()               {}
func (*RegionLeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RegionLeaderResponse) GetLeaderStoreId() uint64 {
	if m != nil && m.LeaderStoreId != nil {
		return *m.LeaderStoreId
	}
	return 0
}

// For getting more information of the region.
// We add some admin operations (ChangePeer, Split...) into the pb job list,
// then pd server will peek the first one, handle it and then pop it from the job lib.
// But sometimes, the pd server may crash before popping. When another pd server
// starts and finds the job is running but not finished, it will first check whether
// the raft server already has handled this job.
// E,g, for ChangePeer, if we add Peer10 into region1 and find region1 has already had
// Peer10, we can think this ChangePeer is finished, and can pop this job from job list
// directly.
type RegionDetailRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegionDetailRequest) Reset()                    { *m = RegionDetailRequest{} }
func (m *RegionDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*RegionDetailRequest) ProtoMessage()               {}
func (*RegionDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type RegionDetailResponse struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	LeaderStoreId    *uint64        `protobuf:"varint,2,opt,name=leader_store_id,json=leaderStoreId" json:"leader_store_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RegionDetailResponse) Reset()                    { *m = RegionDetailResponse{} }
func (m *RegionDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*RegionDetailResponse) ProtoMessage()               {}
func (*RegionDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RegionDetailResponse) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *RegionDetailResponse) GetLeaderStoreId() uint64 {
	if m != nil && m.LeaderStoreId != nil {
		return *m.LeaderStoreId
	}
	return 0
}

type StoreStatsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StoreStatsRequest) Reset()                    { *m = StoreStatsRequest{} }
func (m *StoreStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreStatsRequest) ProtoMessage()               {}
func (*StoreStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type StoreStatsResponse struct {
	// Capacity is the max size for this store.
	// If the store used size >= capacity, pd won't choose this store
	// for later auto-balance.
	// Now we don't handle capacity and used_size, will do it later.
	Capacity    *uint64 `protobuf:"varint,1,opt,name=capacity" json:"capacity,omitempty"`
	UsedSize    *uint64 `protobuf:"varint,2,opt,name=used_size,json=usedSize" json:"used_size,omitempty"`
	RegionCount *uint64 `protobuf:"varint,3,opt,name=region_count,json=regionCount" json:"region_count,omitempty"`
	// Leader peer count the store has.
	LeaderCount      *uint64 `protobuf:"varint,4,opt,name=leader_count,json=leaderCount" json:"leader_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StoreStatsResponse) Reset()                    { *m = StoreStatsResponse{} }
func (m *StoreStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*StoreStatsResponse) ProtoMessage()               {}
func (*StoreStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *StoreStatsResponse) GetCapacity() uint64 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return 0
}

func (m *StoreStatsResponse) GetUsedSize() uint64 {
	if m != nil && m.UsedSize != nil {
		return *m.UsedSize
	}
	return 0
}

func (m *StoreStatsResponse) GetRegionCount() uint64 {
	if m != nil && m.RegionCount != nil {
		return *m.RegionCount
	}
	return 0
}

func (m *StoreStatsResponse) GetLeaderCount() uint64 {
	if m != nil && m.LeaderCount != nil {
		return *m.LeaderCount
	}
	return 0
}

type StatusRequest struct {
	CmdType          *StatusCmdType       `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.StatusCmdType" json:"cmd_type,omitempty"`
	RegionLeader     *RegionLeaderRequest `protobuf:"bytes,2,opt,name=region_leader,json=regionLeader" json:"region_leader,omitempty"`
	RegionDetail     *RegionDetailRequest `protobuf:"bytes,3,opt,name=region_detail,json=regionDetail" json:"region_detail,omitempty"`
	StoreStats       *StoreStatsRequest   `protobuf:"bytes,4,opt,name=store_stats,json=storeStats" json:"store_stats,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *StatusRequest) GetCmdType() StatusCmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return StatusCmdType_InvalidStatus
}

func (m *StatusRequest) GetRegionLeader() *RegionLeaderRequest {
	if m != nil {
		return m.RegionLeader
	}
	return nil
}

func (m *StatusRequest) GetRegionDetail() *RegionDetailRequest {
	if m != nil {
		return m.RegionDetail
	}
	return nil
}

func (m *StatusRequest) GetStoreStats() *StoreStatsRequest {
	if m != nil {
		return m.StoreStats
	}
	return nil
}

type StatusResponse struct {
	CmdType          *StatusCmdType        `protobuf:"varint,1,opt,name=cmd_type,json=cmdType,enum=raft_cmdpb.StatusCmdType" json:"cmd_type,omitempty"`
	RegionLeader     *RegionLeaderResponse `protobuf:"bytes,2,opt,name=region_leader,json=regionLeader" json:"region_leader,omitempty"`
	RegionDetail     *RegionDetailResponse `protobuf:"bytes,3,opt,name=region_detail,json=regionDetail" json:"region_detail,omitempty"`
	StoreStats       *StoreStatsResponse   `protobuf:"bytes,4,opt,name=store_stats,json=storeStats" json:"store_stats,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *StatusResponse) GetCmdType() StatusCmdType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return StatusCmdType_InvalidStatus
}

func (m *StatusResponse) GetRegionLeader() *RegionLeaderResponse {
	if m != nil {
		return m.RegionLeader
	}
	return nil
}

func (m *StatusResponse) GetRegionDetail() *RegionDetailResponse {
	if m != nil {
		return m.RegionDetail
	}
	return nil
}

func (m *StatusResponse) GetStoreStats() *StoreStatsResponse {
	if m != nil {
		return m.StoreStats
	}
	return nil
}

type RaftRequestHeader struct {
	RegionId *uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	// true for read linearization
	ReadQuorum *bool `protobuf:"varint,2,opt,name=read_quorum,json=readQuorum" json:"read_quorum,omitempty"`
	// 16 bytes, to distinguish request.
	Uuid             []byte              `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	RegionEpoch      *metapb.RegionEpoch `protobuf:"bytes,4,opt,name=region_epoch,json=regionEpoch" json:"region_epoch,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RaftRequestHeader) Reset()                    { *m = RaftRequestHeader{} }
func (m *RaftRequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RaftRequestHeader) ProtoMessage()               {}
func (*RaftRequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *RaftRequestHeader) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *RaftRequestHeader) GetReadQuorum() bool {
	if m != nil && m.ReadQuorum != nil {
		return *m.ReadQuorum
	}
	return false
}

func (m *RaftRequestHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *RaftRequestHeader) GetRegionEpoch() *metapb.RegionEpoch {
	if m != nil {
		return m.RegionEpoch
	}
	return nil
}

type RaftResponseHeader struct {
	Error            *errorpb.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Uuid             []byte         `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	CurrentTerm      *uint64        `protobuf:"varint,3,opt,name=current_term,json=currentTerm" json:"current_term,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RaftResponseHeader) Reset()                    { *m = RaftResponseHeader{} }
func (m *RaftResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*RaftResponseHeader) ProtoMessage()               {}
func (*RaftResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *RaftResponseHeader) GetError() *errorpb.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RaftResponseHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *RaftResponseHeader) GetCurrentTerm() uint64 {
	if m != nil && m.CurrentTerm != nil {
		return *m.CurrentTerm
	}
	return 0
}

type RaftCmdRequest struct {
	Header *RaftRequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// We can't enclose normal requests and administrator request
	// at same time.
	Requests         []*Request     `protobuf:"bytes,2,rep,name=requests" json:"requests,omitempty"`
	AdminRequest     *AdminRequest  `protobuf:"bytes,3,opt,name=admin_request,json=adminRequest" json:"admin_request,omitempty"`
	StatusRequest    *StatusRequest `protobuf:"bytes,4,opt,name=status_request,json=statusRequest" json:"status_request,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RaftCmdRequest) Reset()                    { *m = RaftCmdRequest{} }
func (m *RaftCmdRequest) String() string            { return proto.CompactTextString(m) }
func (*RaftCmdRequest) ProtoMessage()               {}
func (*RaftCmdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RaftCmdRequest) GetHeader() *RaftRequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RaftCmdRequest) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *RaftCmdRequest) GetAdminRequest() *AdminRequest {
	if m != nil {
		return m.AdminRequest
	}
	return nil
}

func (m *RaftCmdRequest) GetStatusRequest() *StatusRequest {
	if m != nil {
		return m.StatusRequest
	}
	return nil
}

type RaftCmdResponse struct {
	Header           *RaftResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Responses        []*Response         `protobuf:"bytes,2,rep,name=responses" json:"responses,omitempty"`
	AdminResponse    *AdminResponse      `protobuf:"bytes,3,opt,name=admin_response,json=adminResponse" json:"admin_response,omitempty"`
	StatusResponse   *StatusResponse     `protobuf:"bytes,4,opt,name=status_response,json=statusResponse" json:"status_response,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RaftCmdResponse) Reset()                    { *m = RaftCmdResponse{} }
func (m *RaftCmdResponse) String() string            { return proto.CompactTextString(m) }
func (*RaftCmdResponse) ProtoMessage()               {}
func (*RaftCmdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *RaftCmdResponse) GetHeader() *RaftResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RaftCmdResponse) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *RaftCmdResponse) GetAdminResponse() *AdminResponse {
	if m != nil {
		return m.AdminResponse
	}
	return nil
}

func (m *RaftCmdResponse) GetStatusResponse() *StatusResponse {
	if m != nil {
		return m.StatusResponse
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "raft_cmdpb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "raft_cmdpb.GetResponse")
	proto.RegisterType((*SeekRequest)(nil), "raft_cmdpb.SeekRequest")
	proto.RegisterType((*SeekResponse)(nil), "raft_cmdpb.SeekResponse")
	proto.RegisterType((*PutRequest)(nil), "raft_cmdpb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "raft_cmdpb.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "raft_cmdpb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "raft_cmdpb.DeleteResponse")
	proto.RegisterType((*SnapRequest)(nil), "raft_cmdpb.SnapRequest")
	proto.RegisterType((*SnapResponse)(nil), "raft_cmdpb.SnapResponse")
	proto.RegisterType((*Request)(nil), "raft_cmdpb.Request")
	proto.RegisterType((*Response)(nil), "raft_cmdpb.Response")
	proto.RegisterType((*ChangePeerRequest)(nil), "raft_cmdpb.ChangePeerRequest")
	proto.RegisterType((*ChangePeerResponse)(nil), "raft_cmdpb.ChangePeerResponse")
	proto.RegisterType((*SplitRequest)(nil), "raft_cmdpb.SplitRequest")
	proto.RegisterType((*SplitResponse)(nil), "raft_cmdpb.SplitResponse")
	proto.RegisterType((*CompactLogRequest)(nil), "raft_cmdpb.CompactLogRequest")
	proto.RegisterType((*CompactLogResponse)(nil), "raft_cmdpb.CompactLogResponse")
	proto.RegisterType((*AdminRequest)(nil), "raft_cmdpb.AdminRequest")
	proto.RegisterType((*AdminResponse)(nil), "raft_cmdpb.AdminResponse")
	proto.RegisterType((*RegionLeaderRequest)(nil), "raft_cmdpb.RegionLeaderRequest")
	proto.RegisterType((*RegionLeaderResponse)(nil), "raft_cmdpb.RegionLeaderResponse")
	proto.RegisterType((*RegionDetailRequest)(nil), "raft_cmdpb.RegionDetailRequest")
	proto.RegisterType((*RegionDetailResponse)(nil), "raft_cmdpb.RegionDetailResponse")
	proto.RegisterType((*StoreStatsRequest)(nil), "raft_cmdpb.StoreStatsRequest")
	proto.RegisterType((*StoreStatsResponse)(nil), "raft_cmdpb.StoreStatsResponse")
	proto.RegisterType((*StatusRequest)(nil), "raft_cmdpb.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "raft_cmdpb.StatusResponse")
	proto.RegisterType((*RaftRequestHeader)(nil), "raft_cmdpb.RaftRequestHeader")
	proto.RegisterType((*RaftResponseHeader)(nil), "raft_cmdpb.RaftResponseHeader")
	proto.RegisterType((*RaftCmdRequest)(nil), "raft_cmdpb.RaftCmdRequest")
	proto.RegisterType((*RaftCmdResponse)(nil), "raft_cmdpb.RaftCmdResponse")
	proto.RegisterEnum("raft_cmdpb.CmdType", CmdType_name, CmdType_value)
	proto.RegisterEnum("raft_cmdpb.AdminCmdType", AdminCmdType_name, AdminCmdType_value)
	proto.RegisterEnum("raft_cmdpb.StatusCmdType", StatusCmdType_name, StatusCmdType_value)
}

var fileDescriptor0 = []byte{
	// 1284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x5f, 0xb1, 0xfb, 0xec, 0x75, 0x36, 0x93, 0x40, 0x9c, 0x20, 0xd2, 0x74, 0x8b, 0x50,
	0x1b, 0xaa, 0x20, 0x42, 0x09, 0x1c, 0xa0, 0x01, 0x25, 0x11, 0x8d, 0x5a, 0x89, 0x32, 0xa9, 0x90,
	0x38, 0xad, 0x16, 0xef, 0xc4, 0xb1, 0x6a, 0xef, 0x3a, 0xfb, 0x01, 0x84, 0x33, 0xff, 0x00, 0x42,
	0x5c, 0x90, 0x90, 0xf8, 0x1f, 0x39, 0x20, 0x6e, 0x9d, 0x8f, 0x37, 0xb3, 0xb3, 0xd9, 0xf5, 0x21,
	0x3d, 0x79, 0xe7, 0x37, 0x6f, 0x7e, 0xf3, 0xde, 0xef, 0xbd, 0x37, 0x33, 0x06, 0x37, 0x09, 0x2e,
	0x32, 0x7f, 0x3c, 0x0f, 0x17, 0x3f, 0xee, 0x2f, 0x92, 0x38, 0x8b, 0x09, 0x14, 0xc8, 0xf6, 0x60,
	0xce, 0xb2, 0x40, 0xcf, 0x6c, 0x3b, 0x2c, 0x49, 0xe2, 0xc4, 0x0c, 0x07, 0xc2, 0x50, 0x8f, 0xbc,
	0x1d, 0x80, 0x6f, 0x58, 0x46, 0xd9, 0x55, 0xce, 0xd2, 0x8c, 0xb8, 0xd0, 0x7a, 0xc5, 0xae, 0x47,
	0x8d, 0xdd, 0xc6, 0x83, 0x01, 0x15, 0x9f, 0xde, 0x7d, 0xe8, 0xcb, 0xf9, 0x74, 0x11, 0x47, 0x29,
	0x23, 0x1b, 0xd0, 0xf9, 0x29, 0x98, 0xe5, 0x0c, 0x4d, 0xd4, 0xc0, 0xbb, 0x0b, 0xfd, 0x73, 0xc6,
	0x5e, 0x2d, 0x67, 0x39, 0x84, 0x81, 0x32, 0x40, 0x9a, 0x8a, 0x45, 0x41, 0xdc, 0xb4, 0x89, 0x1f,
	0x03, 0xbc, 0xc8, 0x97, 0x7b, 0xb7, 0x64, 0x95, 0x03, 0x7d, 0xb9, 0x4a, 0x6d, 0xe6, 0xdd, 0x03,
	0xe7, 0x84, 0xcd, 0x58, 0xc6, 0x96, 0xfb, 0xe7, 0xc2, 0x50, 0x9b, 0xe0, 0x22, 0xce, 0x71, 0x1e,
	0x05, 0x0b, 0x5c, 0x22, 0x03, 0x90, 0x43, 0x0c, 0xe0, 0x03, 0x58, 0x49, 0xd8, 0x64, 0x1a, 0x47,
	0x92, 0xa5, 0x7f, 0x30, 0xdc, 0x47, 0xc9, 0xa9, 0x44, 0x29, 0xce, 0x7a, 0x7f, 0x35, 0xa1, 0xab,
	0xb7, 0xdd, 0x87, 0x1e, 0x4f, 0x8f, 0x9f, 0x5d, 0x2f, 0x94, 0x7c, 0xc3, 0x83, 0xf5, 0x7d, 0x2b,
	0x8d, 0xc7, 0xf3, 0xf0, 0x25, 0x9f, 0xa2, 0xdd, 0xb1, 0xfa, 0x20, 0x0f, 0xa0, 0x35, 0x61, 0x99,
	0x0c, 0xad, 0x7f, 0xf0, 0x8e, 0x6d, 0x5a, 0x64, 0x8c, 0x0a, 0x13, 0xf2, 0x21, 0xb4, 0x53, 0x2e,
	0xef, 0xa8, 0x25, 0x4d, 0x37, 0x6d, 0x53, 0x2b, 0x2f, 0x54, 0x1a, 0x09, 0xda, 0x45, 0x9e, 0x8d,
	0xda, 0x55, 0xda, 0x42, 0x6a, 0x2a, 0x4c, 0xc8, 0xc7, 0xb0, 0x12, 0x4a, 0x55, 0x46, 0x1d, 0x69,
	0xbc, 0x65, 0x1b, 0x97, 0x24, 0xa5, 0x68, 0x28, 0x3d, 0xe1, 0x3a, 0x8d, 0x56, 0x6a, 0x3c, 0x29,
	0xe4, 0xa4, 0xd2, 0xc8, 0xfb, 0xa7, 0x09, 0x3d, 0xa3, 0xe8, 0x6d, 0xd5, 0x79, 0x68, 0xab, 0xb3,
	0x59, 0x51, 0x47, 0xb1, 0x2a, 0x79, 0x1e, 0x95, 0xe4, 0x19, 0x55, 0xe5, 0x41, 0x63, 0xa5, 0xcf,
	0x43, 0x5b, 0x9f, 0xcd, 0x8a, 0x3e, 0x9a, 0x58, 0x08, 0x74, 0x70, 0x43, 0xa0, 0xed, 0x3a, 0x81,
	0x70, 0x81, 0x56, 0xe8, 0x51, 0x49, 0xa1, 0x51, 0x55, 0x21, 0xe3, 0x8c, 0x90, 0x68, 0x02, 0x6b,
	0xc7, 0x97, 0x41, 0x34, 0x61, 0x2f, 0x18, 0x4b, 0x74, 0x21, 0x7d, 0x06, 0xfd, 0xb1, 0x04, 0x6d,
	0xb5, 0x54, 0x26, 0x85, 0x52, 0x71, 0x74, 0xa1, 0xd6, 0x48, 0xc1, 0x60, 0x6c, 0xbe, 0xc9, 0x16,
	0xf4, 0xd2, 0x2c, 0x4e, 0x98, 0x3f, 0x0d, 0xa5, 0x70, 0x6d, 0xda, 0x95, 0xe3, 0xb3, 0xd0, 0xfb,
	0x02, 0x88, 0xbd, 0xd1, 0x2d, 0xcb, 0xfc, 0x5b, 0xde, 0x1e, 0x8b, 0xd9, 0xd4, 0x74, 0xea, 0xbb,
	0x70, 0x27, 0x15, 0x63, 0xbf, 0xe8, 0xb3, 0x9e, 0x04, 0x9e, 0xf1, 0xa6, 0xf5, 0xc0, 0x89, 0xd8,
	0xcf, 0xbe, 0x5a, 0x5a, 0xb8, 0xd2, 0xe7, 0xa0, 0xa2, 0xe5, 0xee, 0xfc, 0x00, 0x0e, 0x12, 0xa2,
	0x27, 0x1e, 0xb4, 0x67, 0xec, 0x22, 0x5b, 0xe2, 0x87, 0x9c, 0x23, 0xef, 0x43, 0x27, 0x99, 0x4e,
	0x2e, 0x75, 0x51, 0xdc, 0x34, 0x52, 0x93, 0xde, 0xe7, 0x5c, 0xd2, 0x78, 0xbe, 0x08, 0xc6, 0xd9,
	0xf3, 0x78, 0xa2, 0x1d, 0xbe, 0x0f, 0xce, 0x58, 0x81, 0xfe, 0x34, 0x0a, 0xd9, 0x2f, 0x72, 0x9f,
	0x36, 0x1d, 0x20, 0x78, 0x26, 0x30, 0x6f, 0x83, 0x6b, 0x64, 0xad, 0xc4, 0x93, 0xe2, 0xdf, 0x06,
	0x0c, 0xbe, 0x0e, 0xe7, 0xd3, 0x48, 0x73, 0x7d, 0x52, 0xa9, 0xe4, 0x52, 0x96, 0xa5, 0x6d, 0xa5,
	0x9c, 0x9f, 0x98, 0x9c, 0x2e, 0x78, 0x02, 0x30, 0x82, 0xf7, 0x4a, 0x1d, 0x70, 0xb3, 0x0e, 0x74,
	0x6a, 0x05, 0xc4, 0xdb, 0xa7, 0x23, 0x05, 0xae, 0x2d, 0x72, 0x2b, 0x35, 0x54, 0x99, 0xc9, 0xfd,
	0x30, 0xe0, 0x59, 0x3c, 0xc1, 0x6a, 0x2f, 0xef, 0x77, 0x53, 0x24, 0xbe, 0x9f, 0x81, 0xbc, 0xff,
	0x1a, 0xe0, 0x60, 0xd4, 0x98, 0xa1, 0x37, 0x0a, 0xfb, 0xa8, 0x2e, 0xec, 0x9d, 0x65, 0x61, 0x63,
	0x6b, 0xd8, 0x71, 0x7f, 0x54, 0x8e, 0x7b, 0xab, 0x26, 0x6e, 0x5c, 0x85, 0x81, 0x1f, 0xd5, 0x05,
	0xbe, 0xb3, 0x2c, 0x70, 0xb3, 0x63, 0x11, 0xf9, 0xdb, 0xb0, 0xae, 0x0a, 0xea, 0x39, 0x0b, 0x42,
	0x93, 0x0c, 0xef, 0x09, 0x6c, 0x94, 0x61, 0xd3, 0x42, 0xab, 0x33, 0x89, 0xf8, 0xa6, 0xf5, 0x54,
	0x6d, 0x39, 0x0a, 0x3e, 0xc7, 0x06, 0x34, 0xb4, 0x27, 0xbc, 0x68, 0xa7, 0x33, 0x4d, 0x7b, 0xa1,
	0x69, 0x35, 0x7c, 0xbb, 0xce, 0xac, 0xdb, 0xbe, 0x59, 0xb7, 0xfd, 0x3a, 0xac, 0xc9, 0xcf, 0xf3,
	0x2c, 0xc8, 0x52, 0xbd, 0xf9, 0x1f, 0x0d, 0x20, 0x36, 0x8a, 0x7b, 0x6f, 0xf3, 0x4c, 0x07, 0x5c,
	0x8e, 0x69, 0x76, 0x8d, 0xb1, 0x98, 0xb1, 0xe8, 0xfc, 0x3c, 0x65, 0xa1, 0x9f, 0x4e, 0x7f, 0x65,
	0xb8, 0x53, 0x4f, 0x00, 0xe7, 0x7c, 0x4c, 0xee, 0xc1, 0x00, 0xbb, 0x7e, 0x1c, 0xe7, 0x91, 0xca,
	0x19, 0x6f, 0x7c, 0x85, 0x1d, 0x0b, 0x48, 0x98, 0xa0, 0xbf, 0xca, 0xa4, 0xad, 0x4c, 0x14, 0x26,
	0x4d, 0xbc, 0xdf, 0x9b, 0xfc, 0x70, 0xe0, 0x0e, 0xe5, 0xda, 0x4f, 0xf2, 0xb8, 0x52, 0x7a, 0xe5,
	0x3a, 0x90, 0xc6, 0x95, 0xda, 0x3b, 0x01, 0x07, 0xbd, 0x51, 0xec, 0x58, 0x7d, 0x77, 0xed, 0xa5,
	0x35, 0x99, 0xa6, 0x18, 0x83, 0x02, 0x2d, 0x96, 0x50, 0x66, 0x08, 0x0b, 0xb1, 0x86, 0xa5, 0x94,
	0x58, 0xcd, 0xa2, 0x40, 0xd1, 0x8e, 0x2a, 0x3f, 0xa9, 0x50, 0xba, 0xae, 0x1d, 0x2b, 0xd9, 0xa1,
	0x90, 0x1a, 0xc8, 0xfb, 0xb3, 0x09, 0x43, 0xad, 0x09, 0x66, 0xe9, 0xcd, 0x44, 0x39, 0xad, 0x17,
	0x65, 0x77, 0xb9, 0x28, 0xd8, 0x22, 0x65, 0x55, 0x4e, 0xeb, 0x55, 0xd9, 0x5d, 0xae, 0x4a, 0x99,
	0x06, 0x65, 0x39, 0xaa, 0x93, 0x65, 0x67, 0x99, 0x2c, 0xba, 0x59, 0x2d, 0x5d, 0xfe, 0x6e, 0xc0,
	0x1a, 0xe5, 0xd6, 0xa8, 0xd9, 0x53, 0xe5, 0x1d, 0x2f, 0xd2, 0xe2, 0xf6, 0xc1, 0x0a, 0x4e, 0xf0,
	0xea, 0x21, 0xfc, 0x31, 0x9b, 0x70, 0x33, 0xff, 0x2a, 0x8f, 0x93, 0x7c, 0x2e, 0xe3, 0xef, 0x51,
	0x10, 0xd0, 0x77, 0x12, 0x21, 0x04, 0xda, 0x79, 0xce, 0x17, 0xb6, 0xe4, 0xbd, 0x26, 0xbf, 0xc9,
	0xa1, 0xa9, 0x6c, 0xb6, 0x88, 0xc7, 0x97, 0xe8, 0xe9, 0x7a, 0xb9, 0x29, 0x4f, 0xc5, 0x94, 0x2e,
	0x77, 0x39, 0xf0, 0xae, 0x80, 0x28, 0xf7, 0x94, 0xef, 0xe8, 0x1f, 0xbf, 0xc8, 0xe4, 0x9b, 0xdd,
	0xf4, 0xb6, 0x7e, 0xc1, 0x9f, 0x8a, 0x5f, 0xaa, 0x26, 0x8d, 0x1f, 0x4d, 0xcb, 0x0f, 0xde, 0x3e,
	0xe3, 0x3c, 0x49, 0x58, 0x94, 0xf9, 0x19, 0x4b, 0xe6, 0xba, 0xc3, 0x10, 0x7b, 0xc9, 0x21, 0xef,
	0xff, 0x06, 0x0c, 0xc5, 0x9e, 0x3c, 0xf5, 0xba, 0x7f, 0x3e, 0x85, 0x95, 0x4b, 0x95, 0xed, 0x46,
	0xb5, 0xf0, 0x2a, 0xf2, 0x51, 0x34, 0xe6, 0x67, 0x2f, 0x57, 0x4d, 0x4e, 0xa4, 0xdc, 0x89, 0x96,
	0x0c, 0xb8, 0x94, 0x5f, 0x55, 0xa7, 0xc6, 0x88, 0x7c, 0x09, 0x4e, 0x20, 0xae, 0x01, 0x1f, 0x91,
	0xba, 0xcb, 0xca, 0xbe, 0x4a, 0xe9, 0x20, 0xb0, 0x2f, 0xd6, 0xaf, 0x60, 0x98, 0xca, 0xaa, 0x35,
	0xeb, 0xdb, 0x35, 0x87, 0xbe, 0x7d, 0x32, 0x50, 0x27, 0xb5, 0x87, 0xde, 0x6f, 0x4d, 0x58, 0x35,
	0xb1, 0x63, 0x9f, 0x1c, 0xde, 0x08, 0x7e, 0xa7, 0x1a, 0xbc, 0x9d, 0x1c, 0x13, 0xfd, 0x81, 0x28,
	0x22, 0x35, 0xa3, 0xc3, 0xdf, 0x28, 0x87, 0x8f, 0xf5, 0x58, 0x98, 0x89, 0x08, 0xb4, 0x00, 0x0a,
	0xaa, 0xbb, 0xb6, 0x4a, 0xd7, 0x2a, 0x75, 0x82, 0xd2, 0x2d, 0x7b, 0x0c, 0xab, 0x46, 0x03, 0xa4,
	0x68, 0x57, 0xdf, 0x9e, 0xe5, 0xa3, 0x80, 0x0e, 0xd3, 0xd2, 0x78, 0xef, 0x29, 0x74, 0xb1, 0xf1,
	0x49, 0x1f, 0xba, 0x67, 0x11, 0xff, 0xdb, 0x34, 0x0d, 0xdd, 0xb7, 0x48, 0x17, 0x5a, 0xfc, 0xf1,
	0xec, 0x36, 0x48, 0x0f, 0xda, 0xe2, 0x65, 0xec, 0x36, 0x05, 0xc4, 0x9f, 0xbd, 0x6e, 0x8b, 0x00,
	0xac, 0xa8, 0x17, 0xad, 0xdb, 0x96, 0xd3, 0xfc, 0x75, 0xea, 0x76, 0xf6, 0x9e, 0xe1, 0xdb, 0x47,
	0xd3, 0xb9, 0x30, 0x40, 0x3a, 0x09, 0x73, 0xce, 0x21, 0x40, 0x71, 0x85, 0x73, 0xea, 0x3b, 0xd0,
	0x91, 0xf7, 0x32, 0xe7, 0x16, 0x53, 0xe6, 0x5e, 0x75, 0x5b, 0x7b, 0xdf, 0xeb, 0x73, 0x5d, 0xb3,
	0xad, 0x81, 0x83, 0x6c, 0x0a, 0xe7, 0x74, 0x7c, 0x03, 0xfb, 0xf8, 0xe1, 0x84, 0x06, 0x51, 0x67,
	0x86, 0xe2, 0x2d, 0x8e, 0x05, 0xb7, 0xf5, 0x3a, 0x00, 0x00, 0xff, 0xff, 0x84, 0xac, 0xf3, 0x2a,
	0x2d, 0x0f, 0x00, 0x00,
}
