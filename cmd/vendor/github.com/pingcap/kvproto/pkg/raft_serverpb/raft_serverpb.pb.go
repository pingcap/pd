// Code generated by protoc-gen-go.
// source: raft_serverpb.proto
// DO NOT EDIT!

/*
Package raft_serverpb is a generated protocol buffer package.

It is generated from these files:
	raft_serverpb.proto

It has these top-level messages:
	RaftMessage
	RaftTruncatedState
	KeyValue
	RaftSnapshotData
	StoreIdent
*/
package raft_serverpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import raftpb "github.com/pingcap/kvproto/pkg/raftpb"
import metapb "github.com/pingcap/kvproto/pkg/metapb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type RaftMessage struct {
	RegionId         *uint64             `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	FromStoreId      *uint64             `protobuf:"varint,2,opt,name=from_store_id" json:"from_store_id,omitempty"`
	ToStoreId        *uint64             `protobuf:"varint,3,opt,name=to_store_id" json:"to_store_id,omitempty"`
	Message          *raftpb.Message     `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	RegionEpoch      *metapb.RegionEpoch `protobuf:"bytes,5,opt,name=region_epoch" json:"region_epoch,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RaftMessage) Reset()                    { *m = RaftMessage{} }
func (m *RaftMessage) String() string            { return proto.CompactTextString(m) }
func (*RaftMessage) ProtoMessage()               {}
func (*RaftMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RaftMessage) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *RaftMessage) GetFromStoreId() uint64 {
	if m != nil && m.FromStoreId != nil {
		return *m.FromStoreId
	}
	return 0
}

func (m *RaftMessage) GetToStoreId() uint64 {
	if m != nil && m.ToStoreId != nil {
		return *m.ToStoreId
	}
	return 0
}

func (m *RaftMessage) GetMessage() *raftpb.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *RaftMessage) GetRegionEpoch() *metapb.RegionEpoch {
	if m != nil {
		return m.RegionEpoch
	}
	return nil
}

type RaftTruncatedState struct {
	Index            *uint64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Term             *uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RaftTruncatedState) Reset()                    { *m = RaftTruncatedState{} }
func (m *RaftTruncatedState) String() string            { return proto.CompactTextString(m) }
func (*RaftTruncatedState) ProtoMessage()               {}
func (*RaftTruncatedState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RaftTruncatedState) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *RaftTruncatedState) GetTerm() uint64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

type KeyValue struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *KeyValue) Reset()                    { *m = KeyValue{} }
func (m *KeyValue) String() string            { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()               {}
func (*KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RaftSnapshotData struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Data             []*KeyValue    `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RaftSnapshotData) Reset()                    { *m = RaftSnapshotData{} }
func (m *RaftSnapshotData) String() string            { return proto.CompactTextString(m) }
func (*RaftSnapshotData) ProtoMessage()               {}
func (*RaftSnapshotData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RaftSnapshotData) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *RaftSnapshotData) GetData() []*KeyValue {
	if m != nil {
		return m.Data
	}
	return nil
}

type StoreIdent struct {
	ClusterId        *uint64 `protobuf:"varint,1,opt,name=cluster_id" json:"cluster_id,omitempty"`
	StoreId          *uint64 `protobuf:"varint,2,opt,name=store_id" json:"store_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StoreIdent) Reset()                    { *m = StoreIdent{} }
func (m *StoreIdent) String() string            { return proto.CompactTextString(m) }
func (*StoreIdent) ProtoMessage()               {}
func (*StoreIdent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StoreIdent) GetClusterId() uint64 {
	if m != nil && m.ClusterId != nil {
		return *m.ClusterId
	}
	return 0
}

func (m *StoreIdent) GetStoreId() uint64 {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return 0
}

func init() {
	proto.RegisterType((*RaftMessage)(nil), "raft_serverpb.RaftMessage")
	proto.RegisterType((*RaftTruncatedState)(nil), "raft_serverpb.RaftTruncatedState")
	proto.RegisterType((*KeyValue)(nil), "raft_serverpb.KeyValue")
	proto.RegisterType((*RaftSnapshotData)(nil), "raft_serverpb.RaftSnapshotData")
	proto.RegisterType((*StoreIdent)(nil), "raft_serverpb.StoreIdent")
}

var fileDescriptor0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x99, 0xed, 0x74, 0xde, 0xa6, 0x3a, 0x53, 0xc4, 0xb2, 0x07, 0x19, 0x05, 0x45, 0x5f,
	0x0a, 0xf6, 0x37, 0xe8, 0x83, 0x88, 0x2f, 0xab, 0x08, 0x3e, 0x95, 0xd8, 0xde, 0x6d, 0xc5, 0xb5,
	0x29, 0x49, 0x3a, 0xdc, 0x4f, 0xf1, 0xdf, 0x9a, 0xa4, 0x2d, 0xa3, 0x2f, 0x81, 0x9c, 0x73, 0xef,
	0x3d, 0x1f, 0x07, 0x02, 0xc1, 0xd6, 0x2a, 0x93, 0x28, 0xf6, 0x28, 0x9a, 0xef, 0xb8, 0x11, 0x5c,
	0x71, 0xea, 0x8f, 0xc4, 0x05, 0x31, 0xdf, 0xc1, 0x5c, 0x90, 0x0a, 0x15, 0x1b, 0x7e, 0xd1, 0xdf,
	0x04, 0xbc, 0x95, 0xb6, 0xdf, 0x51, 0x4a, 0xb6, 0x41, 0x7a, 0x05, 0xe7, 0x02, 0x37, 0x25, 0xaf,
	0xb3, 0xb2, 0x08, 0x27, 0xcb, 0xc9, 0x83, 0x4b, 0xaf, 0xc1, 0x5f, 0x0b, 0x5e, 0x65, 0x52, 0x71,
	0x81, 0x46, 0x3e, 0xb1, 0x72, 0x00, 0x9e, 0xe2, 0x47, 0xd1, 0xb1, 0xe2, 0x12, 0xce, 0xaa, 0xee,
	0x52, 0xe8, 0x6a, 0xc1, 0x4b, 0x2e, 0xe3, 0x3e, 0x7c, 0x08, 0x78, 0x04, 0xd2, 0x07, 0x60, 0xc3,
	0xf3, 0x6d, 0x38, 0xb5, 0x63, 0x41, 0xdc, 0x53, 0xad, 0xac, 0xf7, 0x62, 0xac, 0xe8, 0x09, 0xa8,
	0x41, 0xfb, 0x10, 0x6d, 0x9d, 0x33, 0x85, 0x45, 0xaa, 0xf4, 0x4b, 0x7d, 0x98, 0x96, 0x75, 0x81,
	0xbf, 0x3d, 0x1d, 0x01, 0x57, 0xa1, 0xa8, 0x3a, 0xa8, 0xe8, 0x1e, 0x66, 0x6f, 0x78, 0xf8, 0x64,
	0xbb, 0x16, 0xa9, 0x07, 0xce, 0x0f, 0x1e, 0xec, 0x18, 0x31, 0x5b, 0x7b, 0xa3, 0xda, 0x39, 0x12,
	0x7d, 0xc1, 0xdc, 0x9c, 0x4e, 0x6b, 0xd6, 0xc8, 0x2d, 0x57, 0xcf, 0x4c, 0x31, 0x7a, 0x0b, 0xa7,
	0x1d, 0x99, 0x5d, 0xf1, 0x92, 0x8b, 0x31, 0x13, 0xbd, 0x03, 0xb7, 0xd0, 0x73, 0xfa, 0x82, 0xa3,
	0xdd, 0x9b, 0x78, 0xdc, 0xfc, 0x10, 0x1b, 0x25, 0x00, 0xa9, 0x29, 0xe5, 0xb5, 0xc0, 0x5a, 0x51,
	0x0a, 0x90, 0xef, 0x5a, 0xa9, 0x11, 0x8f, 0x85, 0xce, 0x61, 0x36, 0xee, 0xf2, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0xe0, 0xdc, 0x02, 0x28, 0xc6, 0x01, 0x00, 0x00,
}
